scores_letters = {
    1: 'АВЕИНОРСТ',
    2: 'ДКЛМПУ',
    3: 'БГЬЯ',
    4: 'ЙЫ',
    5: 'ЖЗХЦЧ',
    8: 'ФШЭЮ',
    10: 'Щ',
    15: 'Ъ'
}

text_inp = input(' Введите слово: ').upper().replace('Ё', 'Е')
scores_word = 0
print(sum(
    # ИСПРАВИТЬ: может, здесь подразумевается некая перспектива, но для кода в текущем виде значение scores_word на каждой итерации будет равно нулю
    # КОММЕНТАРИЙ: а если подразумевается, что значение scores_word будет меняться, то это двойная ошибка: 1) int объекты являются неизменяемыми; 2) если бы были изменяемыми и вы бы как-то прописали это изменение на каждой итерации, то каждое число, возвращаемое генератором во время итерации, содержало бы сумму всех предыдущих очков и очки за очередную букву — а потом все эти числа вы ещё снаружи суммируете функцией sum() — итог вышел бы сильно больше ожидаемого числа
    scores_word + k
    # ПЕРЕИМЕНОВАТЬ: имена переменных i, j, k традиционно используются только для индексов
    for i in text_inp for k, v in scores_letters.items()
    if i in v
    # СДЕЛАТЬ: напишите генераторную функцию, эквивалентную данному генераторному выражению, и поэкспериментируйте с разными способами суммирования
))


#  Введите слово: синхрофазотрон
# 29


# ИТОГ: почти хорошо, но требует осмысления — 4/6
